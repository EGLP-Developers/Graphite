package me.eglp.gv2.util.lang;

import java.util.Arrays;

public enum DefaultLocaleString implements LocalizedString {
	
	COMMAND_CATEGORY_ADMIN_NAME("command-category.admin.name", "Admin"),
	COMMAND_CATEGORY_MUSIC_NAME("command-category.music.name", "Music"),
	COMMAND_CATEGORY_BACKUPS_NAME("command-category.backups.name", "Backups"),
	COMMAND_CATEGORY_ROLE_MANAGEMENT_NAME("command-category.role-management.name", "Role Management"),
	COMMAND_CATEGORY_REPORT_NAME("command-category.report.name", "Report"),
	COMMAND_CATEGORY_INFO_NAME("command-category.info.name", "Info"),
	COMMAND_CATEGORY_FUN_NAME("command-category.fun.name", "Fun"),
	COMMAND_CATEGORY_MODERATION_NAME("command-category.moderation.name", "Moderation"),
	COMMAND_CATEGORY_PREMIUM_NAME("command-category.premium.name", "Premium"),
	COMMAND_CATEGORY_TWITCH_NAME("command-category.twitch.name", "Twitch"),
	COMMAND_CATEGORY_TWITTER_NAME("command-category.twitter.name", "Twitter"),
	COMMAND_CATEGORY_REDDIT_NAME("command-category.reddit.name", "Reddit"),
	COMMAND_CATEGORY_GREETER_NAME("command-category.greeter.name", "Greeter"),
	COMMAND_CATEGORY_SCRIPTING_NAME("command-category.scripting.name", "Scripting"),
	COMMAND_CATEGORY_RECORD_NAME("command-category.record.name", "Record"),
	COMMAND_CATEGORY_CHANNEL_MANAGEMENT_NAME("command-category.channel-management.name", "Channel Management"),
	
	COMMAND_PERMISSION_DESCRIPTION("command.permission.description", "Manage permissions for a role or user"),
	
	/*BACKUP&TEMPLATE MESSAGES*/
	COMMAND_BACKUP_CREATE_DESCRIPTION("command.backup.create.description", "Create a backup"),
	COMMAND_BACKUP_CREATE_USAGE("command.backup.create.usage", "{prefix}backup create [amount of messages to save]"),
	COMMAND_BACKUP_CANCEL_DESCRIPTION("command.backup.cancel.description", "Cancel the current restoring/cloning of a backup"),
	COMMAND_BACKUP_CANCEL_USAGE("command.backup.cancel.usage", "{prefix}backup cancel"),
	COMMAND_BACKUP_RESTORE_DESCRIPTION("command.backup.restore.description", "Restore the backup with the given name"),
	COMMAND_BACKUP_RESTORE_USAGE("command.backup.restore.usage", "{prefix}backup restore <backup name> [(+ attached decryption key file)]"),
	COMMAND_BACKUP_COPY_DESCRIPTION("command.backup.copy.description", "Copy a backup from another server"),
	COMMAND_BACKUP_COPY_USAGE("command.backup.copy.usage", "{prefix}backup copy <from server id> <backup name>"),
	COMMAND_BACKUP_DELETE_DESCRIPTION("command.backup.delete.description", "Delete the backup with the given name"),
	COMMAND_BACKUP_DELETE_USAGE("command.backup.delete.usage", "{prefix}backup delete <backup name>"),
	COMMAND_BACKUP_INFO_DESCRIPTION("command.backup.info.description", "View info about a backup"),
	COMMAND_BACKUP_INFO_USAGE("command.backup.info.usage", "{prefix}backup info <backup name>"),
	COMMAND_BACKUP_INFO_CHANNEL_FIELD_NAME("command.backup.info.channel-field.name", "Channels"),
	COMMAND_BACKUP_INFO_ROLE_FIELD_NAME("command.backup.info.role-field.name", "Roles"),
	COMMAND_BACKUP_INFO_ROLE_FIELD_VALUE("command.backup.info.role-field.value", "{roles}"),
	COMMAND_BACKUP_INTERVAL_DESCRIPTION("command.backup.interval.description", "Sets the interval for automatic backups (in days)"),
	COMMAND_BACKUP_INTERVAL_USAGE("command.backup.interval.usage", "{prefix}backup interval <interval (days)>"),
	COMMAND_BACKUP_TEMPLATE_DESCRIPTION("command.backup.template.description", "Share your backups around the world"),
	COMMAND_BACKUP_TEMPLATE_CREATE_DESCRIPTION("command.backup.template.create.description", "Create a global template backup"),
	COMMAND_BACKUP_TEMPLATE_CREATE_USAGE("command.backup.template.create.usage", "{prefix}backup template create <backup name> <name> [description]"),
	COMMAND_BACKUP_TEMPLATE_DELETE_DESCRIPTION("command.backup.template.delete.description", "Delete your global template backup"),
	COMMAND_BACKUP_TEMPLATE_DELETE_USAGE("command.backup.template.delete.usage", "{prefix}backup template delete <template id>"),
	COMMAND_BACKUP_TEMPLATE_LOAD_DESCRIPTION("command.backup.template.load.description", "Load a global template backup"),
	COMMAND_BACKUP_TEMPLATE_LOAD_USAGE("command.backup.template.load.usage", "{prefix}backup template load <template id>"),
	COMMAND_BACKUP_TEMPLATE_SEARCH_DESCRIPTION("command.backup.template.search.description", "Search for a template"),
	COMMAND_BACKUP_TEMPLATE_SEARCH_USAGE("command.backup.template.search.usage", "{prefix}backup template search <name>"),
	COMMAND_BACKUP_TEMPLATE_SEARCH_RESULTS_TITLE("command.backup.template.search.results-title", "Search result(s) for `{query}`"),
	COMMAND_BACKUP_TEMPLATE_SEARCH_RESULTS_FIELD_TITLE("command.backup.template.search.results-field-title", "{name}"),
	COMMAND_BACKUP_TEMPLATE_SEARCH_RESULTS_FIELD_VALUE("command.backup.template.search.results-field-value", "ID: `{id}`\nDescription: `{description}`"),
	COMMAND_BACKUP_LIMIT_REACHED_TITLE("command.backup.limit-reached.title" ,"Backup limit reached"),
	COMMAND_BACKUP_LIMIT_REACHED_VALUE("command.backup.limit-reached.value" ,"You've reached the maximum amount of backups. Donating will allow you to create more backups. Check out our [Patreon]({patreon}) page for more info."),
	COMMAND_BACKUP_CREATING_TITLE("command.backup.creating.title", "Creating backup..."),
	COMMAND_BACKUP_CREATING_VALUE("command.backup.creating.value", "Creating your server backup. This may take a while."),
	COMMAND_BACKUP_TOO_MANY_MESSAGES_TITLE("command.backup.too-many-messages.title", "Invalid message amount"),
	COMMAND_BACKUP_TOO_MANY_MESSAGES_VALUE("command.backup.too-many-messages.value", "Invalid amount of messages to save. You can save a maximum of `100` messages (per channel)."),
	COMMAND_BACKUP_CREATED_TITLE("command.backup.created.title", "Backup created"),
	COMMAND_BACKUP_COPIED_TITLE("command.backup.copied.title", "Backup copied"),
	COMMAND_BACKUP_CREATED_VALUE("command.backup.created.value", "Backup name: `{backup_name}`"),
	COMMAND_BACKUP_CREATED_FIELD_1_TITLE("command.backup.created.field-1.title", "Commands"),
	COMMAND_BACKUP_CREATED_FIELD_1_VALUE("command.backup.created.field-1.value", "Try `{prefix}help backup [subcommand]` to see how you can interact with your newly created backup. Another easy way to manage your backups is via our [webinterface]({webinterface})."),
	COMMAND_BACKUP_CANCEL_FAILURE_TITLE("command.backup.cancel-failure.title", "Failure"),
	COMMAND_BACKUP_CANCEL_FAILURE_VALUE("command.backup.cancel-failure.value", "The bot is currently not restoring/cloning a backup"),
	COMMAND_BACKUP_CANCELLED_TITLE("command.backup.cancelled.title", "Cancelled"),
	COMMAND_BACKUP_CANCELLED_VALUE("command.backup.cancelled.value", "Backup restore cancelled successfully"),
	COMMAND_BACKUP_RATELIMIT_TITLE("command.backup.ratelimit.title", "Ratelimit"),
	COMMAND_BACKUP_RATELIMIT_VALUE("command.backup.ratelimit.value", "Please slow down and wait another {time}"),
	COMMAND_BACKUP_CANT_FIND_BACKUP_TITLE("command.backup.cant-find.backup.title", "Can't find backup"),
	COMMAND_BACKUP_CANT_FIND_BACKUP_VALUE("command.backup.cant-find.backup.value", "A backup with the given id doesn't exist. Make sure you entered the right id."),
	COMMAND_BACKUP_COPY_CANT_FIND_SERVER_TITLE("command.backup.copy.cant-find.server.title", "Can't find server"),
	COMMAND_BACKUP_COPY_CANT_FIND_SERVER_VALUE("command.backup.copy.cant-find.server.value", "A server with the given id doesn't exist. Make sure you entered the right id."),
	COMMAND_BACKUP_INVALID_KEY_TITLE("command.backup.invalid-key.title", "Invalid key"),
	COMMAND_BACKUP_INVALID_KEY_VALUE("command.backup.invalid-key.value", "The attached decryption key doesn't match the backup decryption key. Please make sure you attached the right key."),
	COMMAND_BACKUP_NOT_HIGHEST_ROLE_TITLE("command.backup.not-highest-role.title", "Error"),
	COMMAND_BACKUP_NOT_HIGHEST_ROLE_VALUE("command.backup.not-highest-role.value", "To restore roles correctly, the Graphite role needs to be above all user roles"),
	COMMAND_BACKUP_RESTORING_FAILED_TITLE("command.backup.restoring-failed.title", "Restoring failed"),
	COMMAND_BACKUP_COPY_MISSING_PERMISSION_TITLE("command.backup.copy.missing-permission.title", "Missing permission"),
	COMMAND_BACKUP_COPY_MISSING_PERMISSION_VALUE("command.backup.copy.missing-permission.value", "You need one of the following permissions on the source server to copy a backup: `backup.copy-to-other`, `backup.*` or `*`"),
	COMMAND_BACKUP_DELETED("command.backup.deleted", "Backup deleted"),
	COMMAND_BACKUP_NO_BACKUPS_TITLE("command.backup.no-backups.title", "There are no backups here right now"),
	COMMAND_BACKUP_LIST_LIST("command.backup.list.list", "```Created backups: \n\n{backups}```"),
	COMMAND_BACKUP_INVALID_INTERVAL("command.backup.invalid-interval", "Invalid interval"),
	COMMAND_BACKUP_INTERVAL_TITLE("command.backup.interval.title", "Interval set"),
	COMMAND_BACKUP_INTERVAL_VALUE("command.backup.interval.value", "Graphite will create a backup every `{interval}` day(s) for you"),
	COMMAND_BACKUP_TEMPLATE_NAME_TOO_LONG("command.backup.template.name-too-long", "Name too long. Max: `{max_chars}`"),
	COMMAND_BACKUP_TEMPLATE_DESCRIPTION_TOO_LONG("command.backup.template.description-too-long", "Description too long. Max: `{max_chars}`"),
	COMMAND_BACKUP_TEMPLATE_CREATED_TITLE("command.backup.template.created.title", "Template created"),
	COMMAND_BACKUP_TEMPLATE_CREATED_VALUE("command.backup.template.created.value", "Template ID: {template_id}"),
	COMMAND_BACKUP_TEMPLATE_CANT_DELETE_TITLE("command.backup.template.cant-delete.title", "Uh-Oh!"),
	COMMAND_BACKUP_TEMPLATE_CANT_DELETE_VALUE("command.backup.template.cant-delete.value", "This is not your template! You can't delete it. If you think this template is useless or contains content against the Discord ToS please report this on our [Discord]({discord})"),
	COMMAND_BACKUP_TEMPLATE_DELETED("command.backup.template.deleted", "Template deleted"),
	COMMAND_BACKUP_TEMPLATE_LOAD_FAILED_TITLE("command.backup.template.load-failed.title", "Template load failed"),
	COMMAND_BACKUP_CREATE_KEY_DESCRIPTION("command.backup.create.key-description", "Because your backup contains messages (which will be encrypted), you need a decryption key to restore these messages again.\nMessages will be deleted automatically after 30 days\n[More info]({faq})"),
	COMMAND_BACKUP_INFO_MESSAGE_AUTHOR("command.backup.info.message.author", "Channels/Roles of backup {backup_name}"),
	COMMAND_BACKUP_LIST_DESCRIPTION("command.backup.list.description", "Shows a list of created backups"),
	COMMAND_BACKUP_LIST_USAGE("command.backup.list.usage", "{prefix}backup list"),
	COMMAND_BACKUP_RENAME_DESCRIPTION("command.backup.rename.description", "Rename a backup"),
	COMMAND_BACKUP_RENAME_USAGE("command.backup.rename.usage", "{prefix}backup rename <backup name> <new backup name>"),
	COMMAND_BACKUP_DISCLAIMER("command.backup.disclaimer", ":warning: When restoring a backup, you risk destroying your Discord server's current state.\n"
		+ "\n"
		+ "The bot will delete channels, roles and change server settings.\n"
		+ "Backups may be corrupt.\n"
		+ "Threads will not be restored!\n"
		+ "\n"
		+ "If you're unsure about what you're doing, make sure to first try this on a testing server! If you experience any issues, feel free to contact us on our Discord server. We will help you to the best of our ability, but take no responsibility for broken or incomplete backups!"),
	/*BACKUP&TEMPLATE MESSAGES*/
	
	/*HELP MESSAGES*/
	COMMAND_HELP_MESSAGE_USAGE("command.help.message.usage", "Usage"),
	COMMAND_HELP_MESSAGE_COMMAND("command.help.message.command", "Command"),
	COMMAND_HELP_MESSAGE_PERMISSION("command.help.message.permission", "Permission"),
	COMMAND_HELP_MESSAGE_DESCRIPTION("command.help.message.description", "Description"),
	COMMAND_HELP_MESSAGE_CUSTOMCOMMAND_ACTIONS("command.help.message.customcommand-actions", "CustomCommand ({actions})"),
	COMMAND_HELP_MESSAGE_SUBCOMMANDS("command.help.message.subcommands", "{prefix}{command_name} {subcommands} [...]"),
	COMMAND_HELP_MESSAGE_FOOTER("command.help.message.footer", "Use {prefix}help for all commands / <> - required, [] - optional"),
	COMMAND_HELP_MESSAGE_MISSING_USAGE("command.help.message.missing-usage", ":interrobang: This shouldn't be here. Please report this as a bug"),
	COMMAND_HELP_MESSAGE_GENERAL_INFO("command.help.message.general-info", "It's me, {bot}! :wave: Let's see what I can do for you :ok_hand:\n\n**You need support? [Join our Discord]({discord})**\n**[Invite]({invite}) the bot to your own server**\n\nHelp us out by donating on [Patreon]({patreon})\n\n**Note:** For detailed command help use `{prefix}help <command>`. A list of all commands with description and there permission nodes can be found on [our website]({website})"),
	/*HELP MESSAGES*/
	
	/*FUN MESSAGES*/
	COMMAND_COINFLIP_DESCRIPTION("command.coinflip.description", "Let's flip a coin"),
	COMMAND_COINFLIP_USAGE("command.coinflip.usage", "{prefix}coinflip"),
	COMMAND_DICE_DESCRIPTION("command.dice.description", "Roll a dice and see what happens"),
	COMMAND_DICE_USAGE("command.dice.usage", "{prefix}dice"),
	COMMAND_LOCALE_DESCRIPTION("command.locale.description", "Manage your server locales"),
	COMMAND_CHUCKNORRIS_DESCRIPTION("command.chucknorris.description", "Chuck Norris knows he is the best"),
	COMMAND_CHUCKNORRIS_USAGE("command.chucknorris.usage", "{prefix}chucknorris"),
	COMMAND_8BALL_DESCRIPTION("command.8ball.description", "Ask the magic 8-ball"),
	COMMAND_8BALL_USAGE("command.8ball.usage", "{prefix}8ball <question>"),
	COMMAND_MEME_DESCRIPTION("command.meme.description", "Some random funny memes"),
	COMMAND_MEME_USAGE("command.meme.usage", "{prefix}meme"),
	COMMAND_VCRANDOM_DESCRIPTION("command.vcrandom.description", "Picks a random member (excluding bots) from your voice channel"),
	COMMAND_VCRANDOM_USAGE("command.vcrandom.usage", "{prefix}vcrandom"),
	COMMAND_TCRANDOM_DESCRIPTION("command.tcrandom.description", "Picks a random member (excluding bots) from the current text channel"),
	COMMAND_TCRANDOM_USAGE("command.tcrandom.usage", "{prefix}tcrandom"),
	COMMAND_POLL_DESCRIPTION("command.poll.description", "Create polls"),
	COMMAND_POLL_CREATE_DESCRIPTION("command.poll.create.description", "Create a new poll"),
	COMMAND_POLL_CREATE_USAGE("command.poll.create.usage", "{prefix}poll create <question> <duration (1d2h)> <allow multiple votes> <option 1> <option 2> [option 3] [option 4] [option 5] ... [option 15]"),
	COMMAND_POLL_CREATE_MESSAGE_QUESTION_TITLE("command.poll.create.message.question.title", "Question"),
	COMMAND_POLL_CREATE_MESSAGE_MULTIPLE_VOTES_TITLE("command.poll.create.message.multiple-votes.title", "Multiple votes allowed?"),
	COMMAND_POLL_CREATE_MESSAGE_MULTIPLE_VOTES_YES("command.poll.create.message.multiple-votes.yes", "Yes"),
	COMMAND_POLL_CREATE_MESSAGE_MULTIPLE_VOTES_NO("command.poll.create.message.multiple-votes.no", "No"),
	COMMAND_POLL_CREATE_MESSAGE_POLL_END_TITLE("command.poll.create.message.poll-end.title", "Poll ends at"),
	COMMAND_POLL_CREATE_MESSAGE_OPTIONS_TITLE("command.poll.create.message.options.title", "Options"),
	COMMAND_POLL_CREATE_MESSAGE_TOTAL("command.poll.create.message.total", "Total: {votes} vote(s) cast by {users} member(s) | Poll ID: {poll_id}"),
	COMMAND_POLL_LIST_DESCRIPTION("command.poll.list.description", "Lists all currently running polls"),
	COMMAND_POLL_LIST_USAGE("command.poll.list.usage", "{prefix}poll list"),
	COMMAND_POLL_LIST_LIST("command.poll.list.list", "```Currently running polls:\n\n{polls}```"),
	COMMAND_POLL_STOP_DESCRIPTION("command.poll.stop.description", "Stops a poll"),
	COMMAND_POLL_STOP_USAGE("command.poll.stop.usage", "{prefix}poll stop"),
	
	
	COMMAND_REMINDER_DESCRIPTION("command.reminder.description", "Create reminder"),
	COMMAND_REMINDER_CREATE_DESCRIPTION("command.reminder.create.description", "Create a new reminder"),
	COMMAND_REMINDER_CREATE_USAGE("command.reminder.create.usage", "{prefix}reminder create <date_and_time> <reminder message> [repeat (1y2d)] [channel]"), //TODO
	COMMAND_REMINDER_LIST_DESCRIPTION("command.reminder.list.description", "Lists all currently running reminders"),
	COMMAND_REMINDER_LIST_USAGE("command.reminder.list.usage", "{prefix}reminder list"),
	//COMMAND_REMINDER_LIST_LIST("command.reminder.list.list", "```Currently active reminders:\n\n{reminders}```"),
	COMMAND_REMINDER_LIST_EMBED_TITLE("command.reminder.list.embed.title", "Reminder List"),
	COMMAND_REMINDER_LIST_EMBED_DESCRIPTION("command.reminder.list.embed.description", "A list of all reminders in this guild."),
	COMMAND_REMINDER_LIST_EMBED_CHANNEL("command.reminder.list.embed.channel", "Channel:"),
	COMMAND_REMINDER_LIST_EMBED_MESSAGE("command.reminder.list.embed.message", "Message:"),
	COMMAND_REMINDER_REMOVE_DESCRIPTION("command.reminder.remove.description", "Removes a reminder"),
	COMMAND_REMINDER_REMOVE_USAGE("command.reminder.remove.usage", "{prefix}reminder remove"),
	/*FUN MESSAGES*/
	
	/*INFO MESSAGES*/
	COMMAND_ABOUT_DESCRIPTION("command.about.description", "Shows some information about me"),
	COMMAND_ABOUT_USAGE("command.about.usage", "{prefix}about"),
	COMMAND_FAQ_DESCRIPTION("command.faq.description", "Shows a link to our FAQ webpage"),
	COMMAND_FAQ_USAGE("command.faq.usage", "{prefix}faq"),
	COMMAND_CHANNELINFO_DESCRIPTION("command.channelinfo.description", "Shows some information about a specific channel"),
	COMMAND_CHANNELINFO_USAGE("command.channelinfo.usage", "{prefix}channelinfo <#!channel>"),
	COMMAND_WHATAREYOUDOING_DESCRIPTION("command.whatareyoudoing.description", "Shows some information about current processes and some other useful information"),
	COMMAND_WHATAREYOUDOING_USAGE("command.whatareyoudoing.usage", "{prefix}whatareyoudoing"),
	COMMAND_EMOTEINFO_DESCRIPTION("command.emoteinfo.description", "Shows some information about a specific emote"),
	COMMAND_EMOTEINFO_USAGE("command.emoteinfo.usage", "{prefix}emoteinfo <emote>"),
	COMMAND_INVITE_DESCRIPTION("command.invite.description", "Invite me to every server you own (and your friend's servers too)"),
	COMMAND_INVITE_USAGE("command.invite.usage", "{prefix}invite"),
	COMMAND_USERINFO_DESCRIPTION("command.userinfo.description", "Shows some information about creepy people"),
	COMMAND_USERINFO_USAGE("command.userinfo.usage", "{prefix}userinfo <@Member>"),
	COMMAND_HELP_DESCRIPTION("command.help.description", "It's only a help message. Why would you need help for that? You are weird!"),
	COMMAND_HELP_USAGE("command.help.usage", "{prefix}help"),
	/*INFO MESSAGES*/
	
	COMMAND_REPORT_DESCRIPTION("command.report.description", "Report bad people for bad things"),
	COMMAND_REPORT_USAGE("command.report.usage", "{prefix}report <@Member> <reason>"),
	
	COMMAND_CHATREPORT_DESCRIPTION("command.chatreport.description", "Report a chat snippet of 100 messages"),
	COMMAND_CHATREPORT_USAGE("command.chatreport.usage", "{prefix}chatreport"),
	
	COMMAND_GETROLE_DESCRIPTION("command.getrole.description", "Get an accessible role"),
	COMMAND_GETROLE_USAGE("command.getrole.usage", "{prefix}getrole <@Role>"),
	
	COMMAND_USERCHANNEL_DESCRIPTION("command.userchannel.description", "Create a truly unique channel that you are the boss of"),
	COMMAND_USERCHANNEL_CREATE_DESCRIPTION("command.userchannel.create.description", "Create a truly unique channel that you are the boss of"),
	COMMAND_USERCHANNEL_CREATE_USAGE("command.userchannel.create.usage", "{prefix}userchannel create <Name>"),
	COMMAND_USERCHANNEL_DELETE_DESCRIPTION("command.userchannel.delete.description", "Delete your personal channel and go back to being some random dude with no personal channel"),
	COMMAND_USERCHANNEL_DELETE_USAGE("command.userchannel.delete.usage", "{prefix}userchannel delete"),

	COMMAND_MODROLE_DESCRIPTION("command.modrole.description", "Add/Remove roles that will receive notifications for moderation purposes"),
	COMMAND_MODROLE_ADD_DESCRIPTION("command.modrole.add.description", "Add a modrole"),
	COMMAND_MODROLE_ADD_USAGE("command.modrole.add.usage", "{prefix}modrole add <@Role>"),
	COMMAND_MODROLE_REMOVE_DESCRIPTION("command.modrole.remove.description", "Remove a modrole"),
	COMMAND_MODROLE_REMOVE_USAGE("command.modrole.remove.usage", "{prefix}modrole remove <@Role>"),
	COMMAND_MODROLE_LIST_DESCRIPTION("command.modrole.list.description", "Lists all modroles"),
	COMMAND_MODROLE_LIST_USAGE("command.modrole.list.usage", "{prefix}modrole list"),
	
	COMMAND_SUPPORT_DESCRIPTION("command.support.description", "Support your doodly doods with doodly doodles from [Google Doodles](https://www.google.com/doodles)"),
	COMMAND_SUPPORT_QUEUE_DESCRIPTION("command.support.queue.description", "Set the support queue"),
	COMMAND_SUPPORT_QUEUE_USAGE("command.support.queue.usage", "{prefix}support queue <#!channel>"),
	COMMAND_SUPPORT_UNSETQUEUE_DESCRIPTION("command.support.unsetqueue.description", "Unset the support queue"),
	COMMAND_SUPPORT_UNSETQUEUE_USAGE("command.support.unsetqueue.usage", "{prefix}support unsetqueue"),
	
	COMMAND_BACKUP_DESCRIPTION("command.backup.description", "Create some nice backups"),
	
	COMMAND_ACCESSROLE_DESCRIPTION("command.accessrole.description", "Make roles accessible for all users"),
	COMMAND_ACCESSROLE_ADD_DESCRIPTION("command.accessrole.add.description", "Make a role accessible for all users (e.g. something like no-nsfw)"),
	COMMAND_ACCESSROLE_ADD_USAGE("command.accessrole.add.usage", "{prefix}accessrole add <@Role>"),
	COMMAND_ACCESSROLE_REMOVE_DESCRIPTION("command.accessrole.remove.description", "Remove an accessible role"),
	COMMAND_ACCESSROLE_REMOVE_USAGE("command.accessrole.remove.usage", "{prefix}accessrole remove <@Role>"),
	COMMAND_ACCESSROLE_LIST_DESCRIPTION("command.accessrole.list.description", "Shows all accessible roles"),
	COMMAND_ACCESSROLE_LIST_USAGE("command.accessrole.list.usage", "{prefix}accessrole list"),
	COMMAND_ACCESSROLE_LIST_FIELD_TITLE("command.accessrole.list.field-title", "Accessible roles"),
	
	COMMAND_MUSIC_DESCRIPTION("command.music.description", "Feel the melody in your veins"),
	
	COMMAND_AUTOROLE_DESCRIPTION("command.autorole.description", "Add automatic roles that users will get when joining the server"),
	COMMAND_AUTOROLE_ADD_DESCRIPTION("command.autorole.add.description", "Add an autorole"),
	COMMAND_AUTOROLE_ADD_USAGE("command.autorole.add.usage", "{prefix}autorole add <@Role>"),
	COMMAND_AUTOROLE_REMOVE_DESCRIPTION("command.autorole.remove.description", "Remove an autorole"),
	COMMAND_AUTOROLE_REMOVE_USAGE("command.autorole.remove.usage", "{prefix}autorole remove <@Role>"),
	COMMAND_AUTOROLE_LIST_DESCRIPTION("command.autorole.list.description", "Shows all autoroles"),
	COMMAND_AUTOROLE_LIST_USAGE("command.autorole.list.usage", "{prefix}autorole list"),
	COMMAND_AUTOROLE_LIST_TITLE("command.autorole.list-title", "A list of all roles that will be given automatically when a user joins your server"),
	
	COMMAND_BOTROLE_DESCRIPTION("command.botrole.description", "Add automatic roles that bots will get when joining the server"),
	COMMAND_BOTROLE_ADD_DESCRIPTION("command.botrole.add.description", "Add an botrole"),
	COMMAND_BOTROLE_ADD_USAGE("command.botrole.add.usage", "{prefix}botrole add <@Role>"),
	COMMAND_BOTROLE_REMOVE_DESCRIPTION("command.botrole.remove.description", "Remove an botrole"),
	COMMAND_BOTROLE_REMOVE_USAGE("command.botrole.remove.usage", "{prefix}botrole remove <@Role>"),
	COMMAND_BOTROLE_LIST_DESCRIPTION("command.botrole.list.description", "Shows all botroles"),
	COMMAND_BOTROLE_LIST_USAGE("command.botrole.list.usage", "{prefix}botrole list"),
	COMMAND_BOTROLE_LIST_TITLE("command.botrole.list-title", "A list of all roles that will be given automatically when a bot joins your server"),
	
	/*MINIGAMES MESSAGES*/
	COMMAND_MINIGAME_DESCRIPTION("command.minigame.description", "Play some games with your friends"),
	COMMAND_MINIGAME_PLAY_DESCRIPTION("command.minigame.play.description", "Play a game"),
	COMMAND_MINIGAME_PLAY_USAGE("command.minigame.play.usage", "{prefix}minigame play <minigame>"),
	COMMAND_MINIGAME_PLAY_MULTIPLAYER("command.minigame.play.multiplayer", "Don't forget to invite your friends, it's a multiplayer game."),
	COMMAND_MINIGAME_LEAVE_DESCRIPTION("command.minigame.leave.description", "Leave the current running minigame"),
	COMMAND_MINIGAME_LEAVE_USAGE("command.minigame.leave.usage", "{prefix}minigame leave"),
	COMMAND_MINIGAME_INVITE_DESCRIPTION("command.minigame.invite.description", "Invite your friends to some amazing games"),
	COMMAND_MINIGAME_INVITE_USAGE("command.minigame.invite.usage", "{prefix}minigame invite <@Member>"),
	COMMAND_MINIGAME_SHARE_DESCRIPTION("command.minigame.share.description", "Invite people from the Graphite community to play with you"),
	COMMAND_MINIGAME_SHARE_USAGE("command.minigame.share.usage", "{prefix}minigame share"),
	COMMAND_MINIGAME_JOIN_DESCRIPTION("command.minigame.join.description", "Join a minigame that was shared"),
	COMMAND_MINIGAME_JOIN_USAGE("command.minigame.join.usage", "{prefix}minigame join <minigame>"),
	COMMAND_MINIGAME_LIST_DESCRIPTION("command.minigame.list.description", "What do you think this command does?"),
	COMMAND_MINIGAME_LIST_USAGE("command.minigame.list.usage", "{prefix}minigame list"),
	COMMAND_MINIGAME_SHARED_DESCRIPTION("command.minigame.shared.description", "List all currently shared minigames of the specified minigame"),
	COMMAND_MINIGAME_SHARED_USAGE("command.minigame.shared.usage", "{prefix}minigame shared <minigame>"),
	COMMAND_MINIGAME_STATS_DESCRIPTION("command.minigame.stats.description", "Shows just how bad you are at minigames (or good, but let's be honest here)"),
	COMMAND_MINIGAME_STATS_USAGE("command.minigame.stats.usage", "{prefix}minigame stats"),
	COMMAND_MINIGAME_STATS_TITLE("command.minigame.stats.title", "**Your Minigame statistics**"),
	COMMAND_MINIGAME_STATS_LINE("command.minigame.stats.line", "`{wins}` wins\n`{losses}` losses"),
	/*MINIGAME MESSAGES*/

	COMMAND_AMONGUS_DESCRIPTION("command.amongus.description", "Play some Among Us with your friends"),
	COMMAND_AMONGUS_CREATE_DESCRIPTION("command.amongus.create.description", "Create an Among Us game in your current voice channel"),
	COMMAND_AMONGUS_CREATE_USAGE("command.amongus.create.usage", "{prefix}amongus create"),
	COMMAND_AMONGUS_LINK_DESCRIPTION("command.amongus.link.description", "Link an Among Us player to their respective Discord user"),
	COMMAND_AMONGUS_LINK_USAGE("command.amongus.link.usage", "{prefix}amongus link <@User> <color | name>"),
	COMMAND_AMONGUS_STOP_DESCRIPTION("command.amongus.stop.description", "Stop your current Among Us game"),
	COMMAND_AMONGUS_STOP_USAGE("command.amongus.stop.usage", "{prefix}amongus stop"),
	
	CUSTOMCOMMAND_ARG_TYPE_STRING("customcommand.arg-type.string", "String"),
	CUSTOMCOMMAND_ARG_TYPE_INTEGER("customcommand.arg-type.integer", "Integer"),
	CUSTOMCOMMAND_ARG_TYPE_BOOLEAN("customcommand.arg-type.boolean", "Boolean"),
	CUSTOMCOMMAND_ARG_TYPE_USER("customcommand.arg-type.user", "User"),
	CUSTOMCOMMAND_ARG_TYPE_TEXT_CHANNEL("customcommand.arg-type.text-channel", "Text Channel"),
	CUSTOMCOMMAND_ARG_TYPE_VOICE_CHANNEL("customcommand.arg-type.voice-channel", "Voice Channel"),
	CUSTOMCOMMAND_ARG_TYPE_ROLE("customcommand.arg-type.role", "Role"),
	CUSTOMCOMMAND_ARG_TYPE_COLOR("customcommand.arg-type.color", "Color"),
	
	EVENT_SERVER_JOIN_TITLE("event.server-join.title", "Welcome to the Graphite community, {user}"),
	EVENT_SERVER_JOIN_DESCRIPTION("event.server-join.description", "If you have any questions about our bot, feel free to join our [Discord]({discord}) server or take a look at our [Website]({website}) and our [FAQ]({faq}). **If you happen to find a bug, please report it on our Discord. We want to eliminate all bugs with your help**"),
	EVENT_SERVER_JOIN_FIELD_1_TITLE("event.server-join.field.1.title", ":warning: Important"),
	EVENT_SERVER_JOIN_FIELD_1_CONTENT("event.server-join.field.1.content", "By default some modules of our module system are disabled, but dont worry, you can enable them on our [webinterface]({webinterface}) or by using `{prefix}module enable <Module>`. To list all available modules, try `{prefix}module list`"),
	EVENT_SERVER_JOIN_FIELD_2_TITLE("event.server-join.field.2.title", ":question: Help/Commands"),
	EVENT_SERVER_JOIN_FIELD_2_CONTENT("event.server-join.field.2.content", "If you use `help` in the private chat you can see all usable commands. If you use `{prefix}help` or `@Graphite help` in a server, you can see all commands that can be used in the server. **If a module is disabled you can't see the commands from that module!**"),
	EVENT_SERVER_JOIN_FIELD_3_TITLE("event.server-join.field.3.title", ":bulb: Prefix"),
	EVENT_SERVER_JOIN_FIELD_3_CONTENT("event.server-join.field.3.content", "By default the prefix is `g-` or `@Graphite`, but you can change it by using `{prefix}prefix <New Prefix>`"),
	EVENT_SERVER_JOIN_FIELD_4_TITLE("event.server-join.field.4.title", ":newspaper: Webinterface"),
	EVENT_SERVER_JOIN_FIELD_4_CONTENT("event.server-join.field.4.content", "Graphite has a lot of features that can be used via commands but it's easier to manage everything via our [Webinterface]({webinterface})"),
	EVENT_SERVER_JOIN_FIELD_5_TITLE("event.server-join.field.5.title", ":cry: You miss a feature?"),
	EVENT_SERVER_JOIN_FIELD_5_CONTENT("event.server-join.field.5.content", "We are open to add new features to Graphite. You can suggest new features by joining our [Discord]({discord}) and sending your suggestion in the #suggestions channel."),
	
	PREMIUM_KEY_TYPE_PATREON_FRIENDLY_NAME("premium-key.type.patreon.friendly-name", "Patreon Key"),
	PREMIUM_KEY_TYPE_PATREON_DESCRIPTION("premium-key.type.patreon.description", "Granted by being one of our awesome Patrons :heart:"),
	PREMIUM_KEY_TYPE_PATREON_EXPIRES("premium-key.type.patreon.expires", "Never (unless you decide to quit paying. Please don't. We're poor.)"),
	PREMIUM_KEY_TYPE_TEMPORARY_FRIENDLY_NAME("premium-key.type.temporary.friendly-name", "Temporary Key"),
	PREMIUM_KEY_TYPE_TEMPORARY_DESCRIPTION("premium-key.type.temporary.description", "Granted by voting or by finding eastereggs"),
	PREMIUM_KEY_TYPE_PERMANENT_FRIENDLY_NAME("premium-key.type.permanent.friendly-name", "Permanent Key"),
	PREMIUM_KEY_TYPE_PERMANENT_DESCRIPTION("premium-key.type.permanent.description", "Granted by the bot owners on special occasions"),
	PREMIUM_KEY_TYPE_PERMANENT_EXPIRES("premium-key.type.permanent.expires", "Never"),
	
	COMMAND_CLEAR_DESCRIPTION("command.clear.description", "Polish your chat history squeaky clean :put_litter_in_its_place:"),
	COMMAND_CLEAR_USAGE("command.clear.usage", "{prefix}clear <amount>"),
	
	COMMAND_GREETING_DESCRIPTION("command.greeting.description", "Give new server members a sweet welcome"),
	COMMAND_GREETING_CHANNEL_DESCRIPTION("command.greeting.channel.description", "Specify the channel where the greeting messages will be send"),
	COMMAND_GREETING_CHANNEL_USAGE("command.greeting.channel.usage", "{prefix}greeting channel <#text-channel | user>"),
	COMMAND_GREETING_MESSAGE_DESCRIPTION("command.greeting.message.description", "Send a warm welcome message"),
	COMMAND_GREETING_MESSAGE_USAGE("command.greeting.message.usage", "{prefix}greeting message <message (allowed placeholders: {mention}, {user}, {server})>"),
	COMMAND_GREETING_ENABLE_DESCRIPTION("command.greeting.enable.description", "Enable greeting messages for your server"),
	COMMAND_GREETING_ENABLE_USAGE("command.greeting.enable.usage", "{prefix}greeting enable"),
	COMMAND_GREETING_DISABLE_DESCRIPTION("command.greeting.disable.description", "Disable greeting messages for your server"),
	COMMAND_GREETING_DISABLE_USAGE("command.greeting.disable.usage", "{prefix}greeting disable"),
	COMMAND_GREETING_DEFAULT_MESSAGE("command.greeting.default-message", "Welcome {mention} to {server}"),
	
	COMMAND_FAREWELL_DESCRIPTION("command.farewell.description", "Give leaving users a sad farewell"),
	COMMAND_FAREWELL_CHANNEL_DESCRIPTION("command.farewell.channel.description", "Specify the channel where the farewell messages will be send"),
	COMMAND_FAREWELL_CHANNEL_USAGE("command.farewell.channel.usage", "{prefix}farewell channel <#text-channel>"),
	COMMAND_FAREWELL_MESSAGE_DESCRIPTION("command.farewell.message.description", "Send a sad farewell message"),
	COMMAND_FAREWELL_MESSAGE_USAGE("command.farewell.message.usage", "{prefix}farewell message <message (allowed placeholders: {user}, {server})>"),
	COMMAND_FAREWELL_ENABLE_DESCRIPTION("command.farewell.enable.description", "Enable farewell messages for your server"),
	COMMAND_FAREWELL_ENABLE_USAGE("command.farewell.enable.usage", "{prefix}farewell enable"),
	COMMAND_FAREWELL_DISABLE_DESCRIPTION("command.farewell.disable.description", "Disable farewell messages for your server"),
	COMMAND_FAREWELL_DISABLE_USAGE("command.farewell.disable.usage", "{prefix}farewell disable"),
	COMMAND_FAREWELL_DEFAULT_MESSAGE("command.farewell.default-message", "And I'll tell you all about it when I see you again {user}"),
	
	COMMAND_PURGE_DESCRIPTION("command.purge.description", "Delete all channels/categories or roles"),
	COMMAND_PURGE_USAGE("command.purge.usage", "{prefix}purge <channels | roles>"),
	COMMAND_PURGE_WARNING("command.purge.warning", "All {what} (that can be deleted) will be deleted. Are you sure?"),
	
	COMMAND_CLEARALL_DESCRIPTION("command.clearall.description", "Bulk deletes all messages (max. 1000 messages at once)"),
	COMMAND_CLEARALL_USAGE("command.clearall.usage", "{prefix}clearall"),

	COMMAND_JAIL_DESCRIPTION("command.jail.description", "Trap someone inside their voice channel :lock:"),
	COMMAND_JAIL_USAGE("command.jail.usage", "{prefix}jail <@Member> [#!channel] [Reason]"),
	
	COMMAND_KEYS_DESCRIPTION("command.keys.description", "Look at all your fancy keys :key:"),
	COMMAND_KEYS_USAGE("command.keys.usage", "{prefix}keys"),
	
	COMMAND_PERMISSION_ADD_DESCRIPTION("command.permission.add.description", "So the admins can do what they have to do"),
	COMMAND_PERMISSION_ADD_USAGE("command.permission.add.usage", "{prefix}permission add <@Role | @User | everyone> <permission>"),
	COMMAND_PERMISSION_REMOVE_DESCRIPTION("command.permission.remove.description", "So the admins can't do what they have to do"),
	COMMAND_PERMISSION_REMOVE_USAGE("command.permission.remove.usage", "{prefix}permission remove <@Role | @User | everyone> <permission>"),
	COMMAND_PERMISSION_LIST_DESCRIPTION("command.permission.list.description", "Look at someone's permissions"),
	COMMAND_PERMISSION_LIST_USAGE("command.permission.list.usage", "{prefix}permission list <@Role | @User | everyone>"),
	COMMAND_PERMISSION_CHECK_DESCRIPTION("command.permission.check.description", "Check for a specified permission"),
	COMMAND_PERMISSION_CHECK_USAGE("command.permission.check.usage", "{prefix}permission check <@Role | @User | everyone> <permission>"),
	
	COMMAND_PERMISSION_LIST_SELF_TITLE("command.permission.list.self.title", "Permissions specific to {entity}"),
	COMMAND_PERMISSION_LIST_INHERITED_TITLE("command.permission.list.inherited.title", "Permissions inherited from {entity}"),
	
	COMMAND_PREFIX_DESCRIPTION("command.prefix.description", "Change the prefix (must be a one word string without spaces)"),
	COMMAND_PREFIX_USAGE("command.prefix.usage", "{prefix}prefix <prefix>"),
	
	COMMAND_PREMIUM_REDEEM_DESCRIPTION("command.premium.redeem.description", "Ooh, shiny! :key: :star2:"),
	COMMAND_PREMIUM_REDEEM_USAGE("command.premium.redeem.usage", "{prefix}redeem <key>"),
	
	COMMAND_PREMIUM_ADDKEY_DESCRIPTION("command.premium.addkey.description", "Claim a currently unowned key"),
	COMMAND_PREMIUM_ADDKEY_USAGE("command.premium.addkey.usage", "{prefix}premium addkey <key>"),
	
	COMMAND_DONATORS_DESCRIPTION("command.donators.description", "Shows a list of our donators"),
	COMMAND_DONATORS_USAGE("command.donators.usage", "{prefix}donators"),
	
	COMMAND_PREMIUM_LEVEL_DESCRIPTION("command.premium.level.description", "Shows the premium level of your server"),
	COMMAND_PREMIUM_LEVEL_USAGE("command.premium.level.usage", "{prefix}premium level"),
	
	COMMAND_DONATORS_TITLE("command.donators.title", "Thanks for your support :heart:"),
	
	COMMAND_TEMPBAN_DESCRIPTION("command.tempban.description", "It does what it says"),
	COMMAND_TEMPBAN_USAGE("command.tempban.usage", "{prefix}tempban <@Member> <duration (1d2h)> [reason]"),
	
	COMMAND_TEMPJAIL_DESCRIPTION("command.tempjail.description", "You can't just give them a lifetime sentence every time"),
	COMMAND_TEMPJAIL_USAGE("command.tempjail.usage", "{prefix}tempjail <@Member> <duration (1d2h)> [reason]"),
	
	COMMAND_TEMPVOICEMUTE_DESCRIPTION("command.tempvoicemute.description", "Temporarily voicemute a specified member"),
	COMMAND_TEMPVOICEMUTE_USAGE("command.tempvoicemute.usage", "{prefix}tempvoicemute <@Member> <duration (1d2h)> [reason]"),
	
	COMMAND_TEMPCHATMUTE_DESCRIPTION("command.tempchatmute.description", ":mute: + :clock2: = :speaker:"),
	COMMAND_TEMPCHATMUTE_USAGE("command.tempchatmute.usage", "{prefix}tempchatmute <@Member> <duration (1d2h)> [reason]"),
	
	COMMAND_CHATMUTE_DESCRIPTION("command.chatmute.description", ":mute:"),
	COMMAND_CHATMUTE_USAGE("command.chatmute.usage", "{prefix}chatmute <@Member> [reason]"),
	
	COMMAND_TWITCH_DESCRIPTION("command.twitch.description", "Not sponsered by Twitch"),
	COMMAND_TWITCH_MESSAGE_DESCRIPTION("command.twitch.message.description", "Set your own message that will be sent when the specified streamer goes live"),
	COMMAND_TWITCH_MESSAGE_USAGE("command.twitch.message.usage", "{prefix}twitch message <streamer> <message>"),
	COMMAND_TWITCH_CHANNEL_DESCRIPTION("command.twitch.channel.description", "Set the channel where the bot will send the notification messages"),
	COMMAND_TWITCH_CHANNEL_USAGE("command.twitch.channel.usage", "{prefix}twitch channel <streamer> <#text-channel>"),
	COMMAND_TWITCH_ADD_DESCRIPTION("command.twitch.add.description", "Add a streamer"),
	COMMAND_TWITCH_ADD_USAGE("command.twitch.add.usage", "{prefix}twitch add <streamer> <#text-channel>"),
	COMMAND_TWITCH_REMOVE_DESCRIPTION("command.twitch.remove.description", "Remove a streamer"),
	COMMAND_TWITCH_REMOVE_USAGE("command.twitch.remove.usage", "{prefix}twitch remove <streamer>"),
	
	COMMAND_TWITTER_DESCRIPTION("command.twitter.description", "Not sponsered by Twitter"),
	COMMAND_TWITTER_CHANNEL_DESCRIPTION("command.twitter.channel.description", "Set the channel where the bot will send the notification messages"),
	COMMAND_TWITTER_CHANNEL_USAGE("command.twitter.channel.usage", "{prefix}twitter channel <user> <#text-channel>"),
	COMMAND_TWITTER_ADD_DESCRIPTION("command.twitter.add.description", "Add a Twitter user"),
	COMMAND_TWITTER_ADD_USAGE("command.twitter.add.usage", "{prefix}twitter add <user> <#text-channel>"),
	COMMAND_TWITTER_REMOVE_DESCRIPTION("command.twitter.remove.description", "Remove a Twitter user"),
	COMMAND_TWITTER_REMOVE_USAGE("command.twitter.remove.usage", "{prefix}twitter remove <user>"),
	
	COMMAND_REDDIT_DESCRIPTION("command.reddit.description", "Not sponsered by Reddit"),
	COMMAND_REDDIT_CHANNEL_DESCRIPTION("command.reddit.channel.description", "Set the channel where the bot will send the subreddits"),
	COMMAND_REDDIT_CHANNEL_USAGE("command.reddit.channel.usage", "{prefix}reddit channel <subreddit> <#text-channel>"),
	COMMAND_REDDIT_ADD_DESCRIPTION("command.reddit.add.description", "Add a subreddit"),
	COMMAND_REDDIT_ADD_USAGE("command.reddit.add.usage", "{prefix}reddit add <subreddit> <#text-channel>"),
	COMMAND_REDDIT_REMOVE_DESCRIPTION("command.reddit.remove.description", "Remove a subreddit"),
	COMMAND_REDDIT_REMOVE_USAGE("command.reddit.remove.usage", "{prefix}reddit remove <subreddit>"),
	
	COMMAND_UNJAIL_DESCRIPTION("command.unjail.description", "Unjail the specified member"),
	COMMAND_UNJAIL_USAGE("command.unjail.usage", "{prefix}unjail <@Member> [reason]"),
	
	COMMAND_UNBAN_DESCRIPTION("command.unban.description", "Unban the specified member"),
	COMMAND_UNBAN_USAGE("command.unban.usage", "{prefix}unban <@Member> [reason]"),
	
	COMMAND_VOICEUNMUTE_DESCRIPTION("command.voiceunmute.description", "Voiceunmute the specified member"),
	COMMAND_VOICEUNMUTE_USAGE("command.voiceunmute.usage", "{prefix}voiceunmute <@Member> [reason]"),
	
	COMMAND_CHATUNMUTE_DESCRIPTION("command.chatunmute.description", "Chatunmute the specified member"),
	COMMAND_CHATUNMUTE_USAGE("command.chatunmute.usage", "{prefix}chatunmute <@Member> [reason]"),

	COMMAND_CHATREPORTS_DESCRIPTION("command.chatreports.description", "Manage your chatreports"),
	COMMAND_CHATREPORTS_LIST_DESCRIPTION("command.chatreports.list.description", "Lists all currently existing chatreports"),
	COMMAND_CHATREPORTS_LIST_USAGE("command.chatreports.list.usage", "{prefix}chatreports list"),
	
	COMMAND_REPORTS_DESCRIPTION("command.reports.description", "Manage your reports"),
	COMMAND_REPORTS_LIST_DESCRIPTION("command.reports.list.description", "Lists all currently existing reports"),
	COMMAND_REPORTS_LIST_USAGE("command.reports.list.usage", "{prefix}reports list"),
	
	COMMAND_MUSIC_PLAY_DESCRIPTION("command.music.play.description", "Play some music"),
	COMMAND_MUSIC_PLAY_USAGE("command.music.play.usage", "{prefix}music play <link or title>"),
	COMMAND_MUSIC_PAUSE_DESCRIPTION("command.music.pause.description", "Pause the song that's currently playing"),
	COMMAND_MUSIC_PAUSE_USAGE("command.music.pause.usage", "{prefix}music pause"),
	COMMAND_MUSIC_STOP_DESCRIPTION("command.music.stop.description", "Stop the song that's currently playing"),
	COMMAND_MUSIC_STOP_USAGE("command.music.stop.usage", "{prefix}music stop"),
	COMMAND_MUSIC_LOOP_DESCRIPTION("command.music.loop.description", "Loop the song that's currently playing"),
	COMMAND_MUSIC_LOOP_USAGE("command.music.loop.usage", "{prefix}music loop"),
	COMMAND_MUSIC_VOLUME_DESCRIPTION("command.music.volume.description", "Make it louder"),
	COMMAND_MUSIC_VOLUME_USAGE("command.music.volume.usage", "{prefix}music volume <volume>"),
	COMMAND_MUSIC_QUEUE_DESCRIPTION("command.music.queue.description", "Shows all currently queued tracks in a fancy list"),
	COMMAND_MUSIC_QUEUE_USAGE("command.music.queue.usage", "{prefix}music queue [page]"),
	COMMAND_MUSIC_REMOVE_DESCRIPTION("command.music.remove.description", "Removes a track by its index"),
	COMMAND_MUSIC_REMOVE_USAGE("command.music.remove.usage", "{prefix}music remove <index>"),
	COMMAND_MUSIC_QUEUE_FORMAT("command.music.queue.format", "[**#{index}**] `{duration}`\n{highlight}{author} | {title}{highlight}"),
	COMMAND_MUSIC_SEEK_DESCRIPTION("command.music.seek.description", "Seeks to a position in the track that's currently playing"),
	COMMAND_MUSIC_SEEK_USAGE("command.music.seek.usage", "{prefix}music seek <timestamp>"),
	COMMAND_MUSIC_FASTFORWARD_DESCRIPTION("command.music.fastforward.description", "Fast-forwards the track that's currently playing"),
	COMMAND_MUSIC_FASTFORWARD_USAGE("command.music.fastforward.usage", "{prefix}music fastforward <timestamp>"),
	COMMAND_MUSIC_REWIND_DESCRIPTION("command.music.rewind.description", "Rewinds the track that's currently playing"),
	COMMAND_MUSIC_REWIND_USAGE("command.music.rewind.usage", "{prefix}music rewind <timestamp>"),
	COMMAND_MUSIC_RESUME_DESCRIPTION("command.music.resume.description", "Resume the track you paused"),
	COMMAND_MUSIC_RESUME_USAGE("command.music.resume.usage", "{prefix}music resume"),
	COMMAND_MUSIC_ENDLESS_DESCRIPTION("command.music.endless.description", "Endlessly play the tracks that are in the queue"),
	COMMAND_MUSIC_ENDLESS_USAGE("command.music.endless.usage", "{prefix}music endless"),
	COMMAND_MUSIC_SHUFFLE_DESCRIPTION("command.music.shuffle.description", "Shuffle the current queue"),
	COMMAND_MUSIC_SHUFFLE_USAGE("command.music.shuffle.usage", "{prefix}music shuffle"),
	COMMAND_MUSIC_SKIP_DESCRIPTION("command.music.skip.description", "Skip the track that's currently playing or a specific amount of tracks"),
	COMMAND_MUSIC_SKIP_USAGE("command.music.skip.usage", "{prefix}music skip [amount]"),
	COMMAND_MUSIC_JUMP_DESCRIPTION("command.music.jump.description", "Jump to a specific track in the queue"),
	COMMAND_MUSIC_JUMP_USAGE("command.music.jump.usage", "{prefix}music jump <index>"),
	COMMAND_MUSIC_NOWPLAYING_DESCRIPTION("command.music.nowplaying.description", "Shows information about the track that's currently playing"),
	COMMAND_MUSIC_NOWPLAYING_USAGE("command.music.nowplaying.usage", "{prefix}music nowplaying"),
	COMMAND_MUSIC_PLAYLIST_DESCRIPTION("command.music.playlist.description", "Create your own playlist"),
	COMMAND_MUSIC_PLAYLIST_PLAY_DESCRIPTION("command.music.playlist.play.description", "Play your playlist"),
	COMMAND_MUSIC_PLAYLIST_PLAY_USAGE("command.music.playlist.play.usage", "{prefix}music playlist play <playlist>"),
	COMMAND_MUSIC_PLAYLIST_SAVE_DESCRIPTION("command.music.playlist.save.description", "Save the current queue into a playlist"),
	COMMAND_MUSIC_PLAYLIST_SAVE_USAGE("command.music.playlist.save.usage", "{prefix}music playlist save [name]"),
	COMMAND_MUSIC_PLAYLIST_DELETE_DESCRIPTION("command.music.playlist.delete.description", "Delete a playlist"),
	COMMAND_MUSIC_PLAYLIST_DELETE_USAGE("command.music.playlist.delete.usage", "{prefix}music playlist delete <playlist>"),
	COMMAND_MUSIC_PLAYLIST_RENAME_DESCRIPTION("command.music.playlist.rename.description", "Rename a playlist"),
	COMMAND_MUSIC_PLAYLIST_RENAME_USAGE("command.music.playlist.rename.usage", "{prefix}music playlist rename <playlist> <new name>"),
	COMMAND_MUSIC_PLAYLIST_LIST_DESCRIPTION("command.music.playlist.list.description", "Shows all your playlists"),
	COMMAND_MUSIC_PLAYLIST_LIST_USAGE("command.music.playlist.list.usage", "{prefix}music playlist list"),
	COMMAND_MUSIC_PLAYLIST_INFO_DESCRIPTION("command.music.playlist.info.description", "Lists tracks of a playlist"),
	COMMAND_MUSIC_PLAYLIST_INFO_USAGE("command.music.playlist.info.usage", "{prefix}music playlist info <playlist>"),
	COMMAND_MUSIC_PLAY_CURRENT_PLAYING_FIELD_TITLE("command.music.play.current-playing.field-title", "Currently playing"),
	COMMAND_MUSIC_PLAY_QUEUED_TRACK_FIELD_TITLE("command.music.play.queued-track.field-title", "Queued track"),
	COMMAND_MUSIC_PLAY_QUEUED_TRACK_FIELD_TITLE_MULTIPLE("command.music.play.queued-track.field-title-multiple", "Queued {number} tracks"),
	COMMAND_MUSIC_PLAY_TRACK_INDEX_TRACKS_FIELD_TITLE("command.music.play.track-index-tracks.field-title", "Track/Total tracks"),
	COMMAND_MUSIC_PLAY_TRACKS_FIELD_TITLE("command.music.play.tracks.field-title", "Total tracks"),
	COMMAND_MUSIC_PLAY_POSITION_DURATION_FIELD_TITLE("command.music.play.position-duration.field-title", "Position/Duration"),
	COMMAND_MUSIC_PLAY_DURATION_FIELD_TITLE("command.music.play.duration.field-title", "Duration"),
	COMMAND_MUSIC_PLAY_AUTHOR_FIELD_TITLE("command.music.play.author.field-title", "Author"),
	COMMAND_MUSIC_PLAY_SPEED_FIELD_TITLE("command.music.play.speed.field-title", "Speed"),
	COMMAND_MUSIC_PLAY_PITCH_FIELD_TITLE("command.music.play.pitch.field-title", "Pitch"),
	COMMAND_MUSIC_PLAY_BASS_BOOST_FIELD_TITLE("command.music.play.bass-boost.field-title", "Bass Boost"),
	COMMAND_MUSIC_PLAY_MORE_THAN_ONE_RESULT("command.music.play.more-than-one-result", "There was more than one result for your search query"),
	COMMAND_MUSIC_PLAYLISTS_FIELD_TITLE("command.music.playlists.field-title", "Playlists"),
	COMMAND_MUSIC_PLAYLISTS_CONTAINING_TRACKS("command.music.playlists.containing-tracks", "{playlist} > [Contains {tracks} track(s)]"),
	COMMAND_MUSIC_LYRICS_DESCRIPTION("command.music.lyrics.description", "Shows the (buest guess) lyrics for the current track"),
	COMMAND_MUSIC_LYRICS_USAGE("command.music.lyrics.usage", "{prefix}music lyrics"),
	COMMAND_MUSIC_LYRICS_AUTHOR_SEARCHING("command.music.lyrics.author-searching", "Searching for lyrics..."),
	COMMAND_MUSIC_LYRICS_AUTHOR_SEARCHING_DESCRIPTION("command.music.lyrics.author-searching-description", "Search lyrics for {song}. Lyrics powered by Genius and may not be accurate."),
	COMMAND_MUSIC_BASSBOOST_DESCRIPTION("command.music.bassboost.description", "Bust out your eardrums with an excessive amount of bass"),
	COMMAND_MUSIC_BASSBOOST_USAGE("command.music.bassboost.usage", "{prefix}music bassboost <level (0 - 3)>"),
	COMMAND_MUSIC_SPEED_DESCRIPTION("command.music.speed.description", "Speedthingsupreallyfast or s l o w t h e m d o w n"),
	COMMAND_MUSIC_SPEED_USAGE("command.music.speed.usage", "{prefix}music speed <speed (0.25 - 5)>"),
	COMMAND_MUSIC_PITCH_DESCRIPTION("command.music.pitch.description", "Make songs go really \u02B0\u1DA6\u1D4D\u02B0 or really \u2097\u2092\uD835\uDCCC"),
	COMMAND_MUSIC_PITCH_USAGE("command.music.pitch.usage", "{prefix}music pitch <pitch (0.25 - 5)>"),
	COMMAND_MUSIC_NIGHTCORE_DESCRIPTION("command.music.nightcore.description", "Make your songs more \u304B\u308F\u3044\u3044 \u30FD(>\u2200<\u2606)\u30CE"),
	COMMAND_MUSIC_NIGHTCORE_USAGE("command.music.nightcore.usage", "{prefix}music nightcore"),
	COMMAND_MUSIC_RESET_DESCRIPTION("command.music.reset.description", "Reset all playback settings"),
	COMMAND_MUSIC_RESET_USAGE("command.music.reset.usage", "{prefix}music reset"),
	
	COMMAND_KEYS_FIELD_HEAD("command.keys.field.head", "Key: `{key}`"),
	COMMAND_KEYS_FIELD_VALUES("command.keys.field.values", 
			  "Type: `{type}`\n"
			+ "Premium Level: `{level}`\n"
			+ "Description: `{description}`\n"
			+ "Expires in: `{time}`\n"
			+ "Used by: `{user}`"),
	
	COMMAND_CHATREPORTS_LIST_FIELD_HEAD("command.chatreports.list.field.head", "**[#{index}]** Chatreport by `{reporter}`\n"),
	COMMAND_CHATREPORTS_LIST_FIELD_FOOTER("command.chatreports.list.field.footer", "Currently there are {chatreports} chatreport(s)"),
	
	COMMAND_CHATREPORTS_REMOVE_USAGE("command.chatreports-remove.usage", "{prefix}chatreports remove <index>"),
	COMMAND_CHATREPORTS_REMOVE_DESCRIPTION("command.chatreports-remove.description", "Removes the chatreport at the specified index"),
	
	COMMAND_REPORTS_FIELD_HEAD("command.reports.field.head", "**[#{index}]** `{reporter}` has reported `{reported}`"),
	COMMAND_REPORTS_FIELD_VALUES("command.reports.field.values", "Reason: `{reason}`"),
	COMMAND_REPORTS_FIELD_FOOTER("command.reports.field.footer", "Currently there are {reports} report(s)"),
	
	COMMAND_REPORTS_REMOVE_USAGE("command.reports-remove.usage", "{prefix}reports remove <index>"),
	COMMAND_REPORTS_REMOVE_DESCRIPTION("command.reports-remove.description", "Removes the report at the specified index"),
	
	COMMAND_PREMIUM_DESCRIPTION("command.premium.description", "All about premium stuff"),
	
	COMMAND_EASTEREGGS_DESCRIPTION("command.eastereggs.description", "Show your eastereggs"),
	COMMAND_EASTEREGGS_USAGE("command.eastereggs.usage", "{prefix}eastereggs"),
	COMMAND_EASTEREGGS_MYSTERY_TITLE("command.eastereggs.mystery.title", "???"),
	COMMAND_EASTEREGGS_MYSTERY_VALUE("command.eastereggs.mystery.value", "Who knows? It's a mystery"),
	COMMAND_EASTEREGGS_MYSTERY_FOOTER("command.eastereggs.mystery.footer", "You have found {amount} of {total_amount} easter eggs\nNote: Some easter eggs may only be available when using [Graphite]({multiplex_url})"),
	
	COMMAND_LOCALE_LIST_DESCRIPTION("command.locale.list.description", "Lists all available locales"),
	COMMAND_LOCALE_LIST_USAGE("command.locale.list.usage", "{prefix}locale list"),
	COMMAND_LOCALE_SET_DESCRIPTION("command.locale.set.description", "Set the locale for your server"),
	COMMAND_LOCALE_SET_USAGE("command.locale.set.usage", "{prefix}locale set <locale>"),
	
	COMMAND_LOCALE_DOWNLOAD_TITLE("command.locale.download.title", "How to create your own server locale"),
	COMMAND_LOCALE_DOWNLOAD_VALUES("command.locale.download.values", 
			  "Step 1: Use `{prefix}locale download [locale]`\n"
			+ "Step 2: Change the messages you want to change\n"
			+ "Step 3: Drag&Drop the file into the discord chat and use `{prefix}locale upload <locale>` as comment at the top\n"
			+ "Step 4: To enable your locale, use `{prefix}locale <locale>`"),
	COMMAND_LOCALE_DOWNLOAD_FOOTER("command.locale.download.footer", "{amount} messages can be changed"),
	COMMAND_LOCALE_DOWNLOAD_DESCRIPTION("command.locale.download.description", "Download a locale and make it your own"),
	COMMAND_LOCALE_DOWNLOAD_USAGE("command.locale.download.usage", "{prefix}locale download [locale]"),
	COMMAND_LOCALE_UPLOAD_DESCRIPTION("command.locale.upload.description", "Upload your own locale"),
	COMMAND_LOCALE_UPLOAD_USAGE("command.locale.upload.usage", "{prefix}locale upload <locale> (+ attached locale file)"),
	COMMAND_LOCALE_UPLOAD_ALREADY_EXISTS("command.locale.upload.already-exists", "A locale with that short already exists. Do you want to overwrite it?"),
	COMMAND_LOCALE_DELETE_DESCRIPTION("command.locale.delete.description", "Delete a custom locale"),
	COMMAND_LOCALE_DELETE_USAGE("command.locale.delete.usage", "{prefix}locale delete <locale>"),
	
	COMMAND_ABOUT_TITLE("command.about.title", "Some information about myself"),
	COMMAND_ABOUT_NAME_TITLE("command.about.name.title", "Name"),
	COMMAND_ABOUT_DEVELOPERS_TITLE("command.about.developers.title", "Developed by"),
	COMMAND_ABOUT_LIBRARIES_TITLE("command.about.libraries.title", "Powered by"),
	COMMAND_ABOUT_DISCORD_LIBRARY_TITLE("command.about.discord-library.title", "Discord Library"),
	COMMAND_ABOUT_SERVER_COUNT_TITLE("command.about.server-count.title", "Server Count"),
	COMMAND_ABOUT_SHARD_COUNT_TITLE("command.about.shard-count.title", "Shard Count"),
	COMMAND_ABOUT_WEBSITE_TITLE("command.about.website.title", "Website"),
	COMMAND_ABOUT_PATREON_TITLE("command.about.patreon.title", "Patreon"),
	COMMAND_ABOUT_TWITTER_TITLE("command.about.twitter.title", "Twitter"),
	COMMAND_ABOUT_CONTRIBUTORS_TITLE("command.about.contributors.title", "With help from our awesome contributors"),
	
	COMMAND_USERINFO_TITLE("command.userinfo.title", "Some information about {user}"),
	COMMAND_USERINFO_NAME_TITLE("command.userinfo.name.title", "Name"),
	COMMAND_USERINFO_ID_TITLE("command.userinfo.id.title", "ID"),
	COMMAND_USERINFO_NICKNAME_TITLE("command.userinfo.nickname.title", "Nickname"),
	COMMAND_USERINFO_NICKNAME_NO_NICKNAME("command.userinfo.nickname.no-nickname", "No nickname set"),
	COMMAND_USERINFO_SERVER_DEAFENED_TITLE("command.userinfo.server-deafened.title", "Server deafened?"),
	COMMAND_USERINFO_SERVER_MUTED_TITLE("command.userinfo.server-muted.title", "Server muted?"),
	COMMAND_USERINFO_DISCRIMINATOR_TITLE("command.userinfo.discriminator.title", "Discriminator"),
	COMMAND_USERINFO_JOINED_TITLE("command.userinfo.joined.title", "Joined"),
	COMMAND_USERINFO_CURRENTLY_IN_AUDIOCHANNEL_TITLE("command.userinfo.currently-in-audiochannel.title", "Currently in audio channel?"),
	COMMAND_USERINFO_CURRENTLY_IN_AUDIOCHANNEL_NONE("command.userinfo.currently-in-audiochannel.none", "Currently not in audio channel"),
	COMMAND_USERINFO_SELF_MUTED_TITLE("command.userinfo.self-muted.title", "Self muted?"),
	COMMAND_USERINFO_SELF_DEAFENED_TITLE("command.userinfo.self-deafened.title", "Self deafened?"),
	COMMAND_USERINFO_TEMP_BANNED_TITLE("command.userinfo.temp-banned.title", "Temp banned?"),
	COMMAND_USERINFO_TEMP_MUTED_TITLE("command.userinfo.temp-muted.title", "Temp muted?"),
	COMMAND_USERINFO_TEMP_JAILED_TITLE("command.userinfo.temp-jailed.title", "Temp jailed?"),
	
	COMMAND_CHANNELINFO_TITLE("command.channelinfo.title", "Information you need to know about {channel}"),
	COMMAND_CHANNELINFO_NAME_TITLE("command.channelinfo.name.title", "Name"),
	COMMAND_CHANNELINFO_ID_TITLE("command.channelinfo.id.title", "ID"),
	COMMAND_CHANNELINFO_BITRATE_TITLE("command.channelinfo.bitrate.title", "Bitrate"),
	COMMAND_CHANNELINFO_PARENT_TITLE("command.channelinfo.parent.title", "Parent"),
	COMMAND_CHANNELINFO_PARENT_NO_PARENT("command.channelinfo.parent.no-parent", "(no category)"),
	COMMAND_CHANNELINFO_USER_LIMIT_TITLE("command.channelinfo.user-limit.title", "User Limit"),
	COMMAND_CHANNELINFO_USER_LIMIT_UNLIMITED("command.channelinfo.user-limit.unlimited", "\u221E"),
	COMMAND_CHANNELINFO_REGION_TITLE("command.channelinfo.region.title", "Region"),
	COMMAND_CHANNELINFO_TOPIC_TITLE("command.channelinfo.topic.title", "Topic"),
	COMMAND_CHANNELINFO_TOPIC_NO_TOPIC("command.channelinfo.topic.no-topic", "None"),
	COMMAND_CHANNELINFO_SLOWMODE_TITLE("command.channelinfo.slowmode.title", "Slowmode"),
	COMMAND_CHANNELINFO_SLOWMODE_OFF("command.channelinfo.slowmode.off", "Off"),
	
	COMMAND_MODULE_DESCRIPTION("command.module.description", "Manage your modules"),
	
	COMMAND_MODULE_ENABLE_DESCRIPTION("command.module.enable.description", "Be able to feel more of Graphite's power"),
	COMMAND_MODULE_ENABLE_USAGE("command.module.enable.usage", "{prefix}module enable <module>"),
	
	COMMAND_MODULE_DISABLE_DESCRIPTION("command.module.disable.description", "Why would you do that? :cry:"),
	COMMAND_MODULE_DISABLE_USAGE("command.module.disable.usage", "{prefix}module disable <module>"),
	
	COMMAND_MODULE_LIST_DESCRIPTION("command.module.list.description", "Shows the max level of power you can enable"),
	COMMAND_MODULE_LIST_USAGE("command.module.list.usage", "{prefix}module list"),
	
	COMMAND_SCRIPT_DESCRIPTION("command.script.description", "Take the power of Graphite in your own hands"),
	COMMAND_SCRIPT_UPLOAD_DESCRIPTION("command.script.upload.description", "Upload a script"),
	COMMAND_SCRIPT_UPLOAD_USAGE("command.script.upload.usage", "{prefix}script upload <script name> [override] (+ attached script file)"),
	COMMAND_SCRIPT_UPLOAD_ALREADY_EXISTS("command.script.upload.already-exists", "A script with that name already exists. Do you want to overwrite it?"),
	COMMAND_SCRIPT_DOWNLOAD_DESCRIPTION("command.script.download.description", "Download a script to edit it"),
	COMMAND_SCRIPT_DOWNLOAD_USAGE("command.script.download.usage", "{prefix}script download [script]"),
	COMMAND_SCRIPT_LIST_DESCRIPTION("command.script.list.description", "List all scripts"),
	COMMAND_SCRIPT_LIST_USAGE("command.script.list.usage", "{prefix}script list"),
	COMMAND_SCRIPT_DELETE_DESCRIPTION("command.script.delete.description", "Delete a script"),
	COMMAND_SCRIPT_DELETE_USAGE("command.script.delete.usage", "{prefix}script delete <script name>"),

	COMMAND_AUTOCHANNEL_DESCRIPTION("command.autochannel.description", "Never run out of Talk-Channels again"),
	COMMAND_AUTOCHANNEL_USAGE("command.autochannel.usage", "{prefix}autochannel <#!channel>"),

	COMMAND_CATEGORYCOPY_DESCRIPTION("command.categorycopy.description", "Copy/Paste the settings of one category to another one"),
	COMMAND_CATEGORYCOPY_USAGE("command.categorycopy.usage", "{prefix}categorycopy :<category> :<category>"),
	
	COMMAND_RECORD_DESCRIPTION("command.record.description", "Record your sweet voice"),
	COMMAND_RECORD_START_DESCRIPTION("command.record.start.description", "Let me slide into your voicechannel and record your sweet voice"),
	COMMAND_RECORD_START_USAGE("command.record.start.usage", "{prefix}record start"),
	COMMAND_RECORD_STOP_DESCRIPTION("command.record.stop.description", "Stop recording"),
	COMMAND_RECORD_STOP_USAGE("command.record.stop.usage", "{prefix}record stop"),
	COMMAND_RECORD_DOWNLOAD_DESCRIPTION("command.record.download.description", "Download a recording"),
	COMMAND_RECORD_DOWNLOAD_USAGE("command.record.download.usage", "{prefix}record download <recording>"),
	COMMAND_RECORD_DELETE_DESCRIPTION("command.record.delete.description", "Delete a recording"),
	COMMAND_RECORD_DELETE_USAGE("command.record.delete.usage", "{prefix}record delete <recording>"),
	COMMAND_RECORD_LIST_TITLE("command.record.list.title", "Recordings can be downloaded using `{prefix}record download <recording>`"),
	COMMAND_RECORD_LIST_DESCRIPTION("command.record.list.description", "List all current existing records"),
	COMMAND_RECORD_LIST_USAGE("command.record.list.usage", "{prefix}record list"),
	COMMAND_RECORD_RENAME_DESCRIPTION("command.record.rename.description", "Rename a recording"),
	COMMAND_RECORD_RENAME_USAGE("command.record.rename.usage", "{prefix}record rename <recording> <new name>"),
	COMMAND_RECORD_SAVING_RECORDING("command.record.saving-recording", "Saving recording..."),

	COMMAND_UPVOTE_DESCRIPTION("command.upvote.description", "Be a nice user and upvote the bot"),
	COMMAND_UPVOTE_USAGE("command.upvote.usage", "{prefix}upvote"),
	
	COMMAND_UPVOTE_TITLE("command.upvote.title", "Upvote the bot"),
	COMMAND_UPVOTE_FIELD_TITLE("command.upvote.field.title", "**{site_name}**"),
	COMMAND_UPVOTE_FIELD_DESCRIPTION("command.upvote.field.description", "[Upvote]({upvote_url}) on {site_name}"),
	
	COMMAND_MONEY_DESCRIPTION("command.money.description", "How much is the fish?"),
	COMMAND_MONEY_USAGE("command.money.usage", "{prefix}money"),
	
	COMMAND_TEXTCOMMANDS_DESCRIPTION("command.textcommands.description", "Enable or disable text-based commands"),
	COMMAND_TEXTCOMMANDS_ENABLE_DESCRIPTION("command.textcommands.enable.description", "Enable text-based commands"),
	COMMAND_TEXTCOMMANDS_ENABLE_USAGE("command.textcommands.enable.usage", "{prefix}textcommands enable"),
	COMMAND_TEXTCOMMANDS_DISABLE_DESCRIPTION("command.textcommands.disable.description", "Disable text-based commands"),
	COMMAND_TEXTCOMMANDS_DISABLE_USAGE("command.textcommands.disable.usage", "{prefix}textcommands disable"),
	
	MINIGAME_MINESWEEPER_NAME("minigame.minesweeper.name", "Minesweeper"),
	MINIGAME_CONNECT_FOUR_NAME("minigame.connect-four.name", "Connect Four"),
	MINIGAME_TICTACTOE_NAME("minigame.tictactoe.name", "TicTacToe"),
	MINIGAME_BATTLESHIPS_NAME("minigame.battleships.name", "Battleships"),
	MINIGAME_BLACKJACK_NAME("minigame.blackjack.name", "Blackjack"),
	MINIGAME_ROCK_PAPER_SCISSORS_NAME("minigame.rock-paper-scissors.name", "Rock Paper Scissors"),
	MINIGAME_POKER_NAME("minigame.poker.name", "Poker"),

	TWITCH_NOTIFICATION_DEFAULT_MESSAGE("twitch-notification.default-message", "Yooo @everyone, {streamer} is now live on {link} :smirk:"),
	TWITCH_NOTIFICATION_TITLE("twitch-notification.title", "Title"),
	TWITCH_NOTIFICATION_STREAMER("twitch-notification.streamer", "Streamer"),
	TWITCH_NOTIFICATION_GAME("twitch-notification.game", "Game"),
	TWITCH_NOTIFICATION_GAME_NONE("twitch-notification.game-none", "Unknown"),
	
	TIME_UNIT_MONTHS("time-unit.months", "month(s)"),
	TIME_UNIT_WEEKS("time-unit.weeks", "week(s)"),
	TIME_UNIT_DAYS("time-unit.days", "day(s)"),
	TIME_UNIT_HOURS("time-unit.hours", "hour(s)"),
	TIME_UNIT_MINUTES("time-unit.minutes", "minute(s)"),
	TIME_UNIT_SECONDS("time-unit.seconds", "second(s)"),
	
	PREMIUM_LEVEL_NONE("premium-level.none", "None"),
	PREMIUM_LEVEL_DONATOR("premium-level.donator", "Donator"),
	
	ERROR_SCRIPT_INVALID_ARG_TYPE("error.script-invalid-arg-type", "Argument #{index} needs to be of type {type}"),
	ERROR_HIT_ROLE_RATELIMIT_TITLE("error.hit-role-ratelimit.title", "Discord role creation rate limit hit"),
	ERROR_HIT_ROLE_RATELIMIT_CONTENT("error.hit-role-ratelimit.content", "Sorry, but you have reached the rate limit of `250 roles per 24h`. All other settings will be restored (as best as possible). If you want to restore all of your roles as well, please restore the backup again in about 24 hours."),
	ERROR_HIT_ROLE_RATELIMIT_FOOTER("error.hit-role-ratelimit.footer", "This rate limit is set by Discord and we can't do anything about it. If you want to have this limit removed, consider upvoting [this post on Discord's feedback page](https://support.discord.com/hc/en-us/community/posts/360050533812-Extreme-rate-limits-on-the-role-create-endpoint)"),
	ERROR_TRY_AGAIN("error.try-again", "Please try again or report this issue to our [Discord]({discord})"),
	
	OTHER_YES("other.yes", "yes,true"),
	OTHER_NO("other.no", "no,false"),
	OTHER_POLL_SUCCESS("other.poll.success", "Successfully voted for {option}"),
	OTHER_POLL_ALREADY_VOTED("other.poll.already-voted", "You have already voted on this poll"),
	OTHER_POLL_ALREADY_VOTED_OPTION("other.poll.already-voted-option", "You have already voted for that option on this poll"),
	
	MINIGAME_BLACKJACK_BET("minigame.blackjack.bet", "Please enter the amount of money you want to bet"),
	MINIGAME_BLACKJACK_INVALID_BET("minigame.blackjack.invalid-bet", "Please enter a valid amount of money to bet"),
	MINIGAME_BLACKJACK_SPLIT("minigame.blackjack.split", "You can split your pair into two hands\nYou will play one hand first and when you're finished, you can play the second hand before the dealer plays."),
	
	MINIGAME_ROCK_PAPER_SCISSORS_SELECT("minigame.rock-paper-scissors.select", "Choose your weapon wisely | Current score: You `{score_self}` : `{score_other}` Other"),
	
	STATISTIC_HUMANS_NAME("statistic.humans.name", "Humans"),
	STATISTIC_BOTS_NAME("statistic.bots.name", "Bots"),
	STATISTIC_TOTAL_MEMBERS_NAME("statistic.total-members.name", "Total Members"),
//	STATISTIC_ONLINE_MEMBERS_NAME("statistic.online-members.name", "Online Members"), // TODO: implement for guild_presences intent
//	STATISTIC_OFFLINE_MEMBERS_NAME("statistic.offline-members.name", "Offline Members"),
	STATISTIC_TEXT_CHANNELS_NAME("statistic.text-channels.name", "Text Channels"),
	STATISTIC_VOICE_CHANNELS_NAME("statistic.voice-channels.name", "Voice Channels"),
	STATISTIC_TOTAL_CHANNELS_NAME("statistic.total-channels.name", "Total Channels"),
	STATISTIC_ROLES_NAME("statistic.roles.name", "Roles"),
	STATISTIC_NEW_MEMBERS_NAME("statistic.new-members.name", "New Members"),
	STATISTIC_NEW_MESSAGES_NAME("statistic.new-messages.name", "New Messages"),
	STATISTIC_NEW_MESSAGES_BY_CHANNEL_NAME("statistic.new-messages-by-channel.name", "New Messages By Channel"),
	STATISTIC_MESSAGE_EMOJI_NAME("statistic.message-emoji.name", "Message Emoji"),
	STATISTIC_REACTION_EMOJI_NAME("statistic.reaction-emoji.name", "Reaction Emoji"),
	;

	private final String messagePath, fallback;
	
	private DefaultLocaleString(String messagePath, String fallback) {
		this.messagePath = messagePath;
		this.fallback = fallback;
	}
	
	@Override
	public String getMessagePath() {
		return messagePath;
	}

	@Override
	public String getFallback() {
		return fallback;
	}
	
	public static DefaultLocaleString getByPath(String path) {
		return Arrays.stream(values())
				.filter(v -> v.getMessagePath().equals(path))
				.findFirst().orElse(null);
	}

}
